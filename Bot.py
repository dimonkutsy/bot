import telebot
import sqlite3
import re

bot = telebot.TeleBot('6453843079:AAFHVRXmYAKhssF8INHw6h4WfQ1eZv9pu_I')

@bot.message_handler(commands=['start'])
def start(message):
    conn = sqlite3.connect('bd.sql')
    cur = conn.cursor()
    cur.execute('CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(50), surname VARCHAR(50), pass VARCHAR(50), version INTEGER DEFAULT 0)')
    conn.commit()
    cur.close()
    conn.close()
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è üëæ')
    bot.register_next_step_handler(message, user_name)

def user_name(message):
    name = message.text.strip()

    if not validate_russian(name):
        bot.reply_to(message, '–ò–º—è –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–µ –±—É–∫–≤—ã. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.')
        bot.register_next_step_handler(message, user_name)
        return

    bot.send_message(message.chat.id, '–ê —Ç–µ–ø–µ—Ä—å —Ñ–∞–º–∏–ª–∏—é üëæ')
    bot.register_next_step_handler(message, user_surname, name)

def user_surname(message, name):
    surname = message.text.strip()

    if not validate_russian(surname):
        bot.reply_to(message, '–§–∞–º–∏–ª–∏—è –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–µ –±—É–∫–≤—ã. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.')
        bot.register_next_step_handler(message, user_surname, name)
        return

    user_exists = check_user_exists(name, surname)

    if user_exists:
        bot.send_message(message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.')
        bot.register_next_step_handler(message, user_name)
    else:
        save_user_data(name, surname)
        bot.send_message(message.chat.id, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!')
        # –í —ç—Ç–æ–º –º–µ—Å—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

def validate_russian(text):
    return bool(re.match(r'^[–∞-—è–ê-–Ø—ë–Å\s]+$', text))

def check_user_exists(name, surname):
    conn = sqlite3.connect('bd.sql')
    cur = conn.cursor()
    cur.execute("SELECT * FROM users WHERE name = ? AND surname = ?", (name, surname))
    user = cur.fetchone()
    cur.close()
    conn.close()
    return user is not None

def save_user_data(name, surname):
    conn = sqlite3.connect('bd.sql')
    cur = conn.cursor()
    cur.execute("INSERT INTO users (name, surname) VALUES (?, ?)", (name, surname))
    conn.commit()
    cur.close()
    conn.close()

@bot.message_handler(commands=['auth'])
def authenticate(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üë§')
    bot.register_next_step_handler(message, check_username)

def check_username(message):
    username = message.text.strip()

    if username == 'admin':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å üîê')
        bot.register_next_step_handler(message, check_password)
    else:
        bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        bot.register_next_step_handler(message, check_username)

def check_password(message):
    password = message.text.strip()

    if password == 'admin':
        markup = telebot.types.ReplyKeyboardMarkup()
        markup.add(telebot.types.KeyboardButton('–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π üìã'))
        bot.send_message(message.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)
        bot.register_next_step_handler(message, handle_admin_action)
    else:
        bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        bot.register_next_step_handler(message, check_password)

def handle_admin_action(message):
    if message.text == '–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π üìã':
        users = get_user_list()
        if not users:
            bot.send_message(message.chat.id, '–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.')
        else:
            user_list = '\n'.join(users)
            bot.send_message(message.chat.id, f'–°–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n{user_list}')
    else:
        bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –æ–ø—Ü–∏—é.')

def get_user_list():
    conn = sqlite3.connect('bd.sql')
    cur = conn.cursor()
    cur.execute("SELECT name, surname FROM users")
    users = cur.fetchall()
    cur.close()
    conn.close()
    return [f"{name} {surname}" for name, surname in users]

bot.polling(none_stop=True)
